// This is your Prisma schema file
// Learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider  = "postgresql"
    url       = env("POSTGRES_URL")
    directUrl = env("POSTGRES_DIRECT_URL")
}

model User {
    id          String       @id @default(uuid())
    email       String       @db.VarChar(64)
    password    String?      @db.VarChar(64)
    chats       Chat[]
    documents   Document[]
    suggestions Suggestion[]
}

model Chat {
    id         String    @id @default(uuid())
    createdAt  DateTime
    title      String    @db.Text
    userId     String
    visibility String    @default("private") @db.VarChar
    user       User      @relation(fields: [userId], references: [id])
    messages   Message[]
    votes      Vote[]
}

model Message {
    id        String   @id @default(uuid())
    chatId    String
    role      String   @db.VarChar
    content   Json
    createdAt DateTime
    chat      Chat     @relation(fields: [chatId], references: [id])
    votes     Vote[]
}

model Vote {
    chatId    String
    messageId String
    isUpvoted Boolean
    chat      Chat    @relation(fields: [chatId], references: [id])
    message   Message @relation(fields: [messageId], references: [id])

    @@id([chatId, messageId])
}

model Document {
    id          String       @default(uuid())
    createdAt   DateTime
    title       String       @db.Text
    content     String?      @db.Text
    kind        String       @default("text") @db.VarChar
    userId      String
    user        User         @relation(fields: [userId], references: [id])
    suggestions Suggestion[]

    @@id([id, createdAt])
}

model Suggestion {
    id                String   @id @default(uuid())
    documentId        String
    documentCreatedAt DateTime
    originalText      String   @db.Text
    suggestedText     String   @db.Text
    description       String?  @db.Text
    isResolved        Boolean  @default(false)
    userId            String
    createdAt         DateTime
    user              User     @relation(fields: [userId], references: [id])
    document          Document @relation(fields: [documentId, documentCreatedAt], references: [id, createdAt])
}
